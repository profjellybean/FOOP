var g=Object.defineProperty;var w=(i,e,t)=>e in i?g(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var o=(i,e,t)=>(w(i,typeof e!="symbol"?e+"":e,t),t);import{j as f}from"./index-0daeb933.js";function a(i){if(typeof i!="object")return i;var e,t,s=Object.prototype.toString.call(i);if(s==="[object Object]"){if(i.constructor!==Object&&typeof i.constructor=="function"){t=new i.constructor;for(e in i)i.hasOwnProperty(e)&&t[e]!==i[e]&&(t[e]=a(i[e]))}else{t={};for(e in i)e==="__proto__"?Object.defineProperty(t,e,{value:a(i[e]),configurable:!0,enumerable:!0,writable:!0}):t[e]=a(i[e])}return t}if(s==="[object Array]"){for(e=i.length,t=Array(e);e--;)t[e]=a(i[e]);return t}return s==="[object Set]"?(t=new Set,i.forEach(function(n){t.add(a(n))}),t):s==="[object Map]"?(t=new Map,i.forEach(function(n,u){t.set(a(u),a(n))}),t):s==="[object Date]"?new Date(+i):s==="[object RegExp]"?(t=new RegExp(i.source,i.flags),t.lastIndex=i.lastIndex,t):s==="[object DataView]"?new i.constructor(a(i.buffer)):s==="[object ArrayBuffer]"?i.slice(0):s.slice(-6)==="Array]"?new i.constructor(i):i}class P{constructor(e){o(this,"numberOfMice",25);o(this,"mouseWinCounter",0);o(this,"map");o(this,"mousePos");o(this,"mouseTargetList");o(this,"goalPos");this.map=e}async updateMousePosition(e){return new Promise((t,s)=>{var u,h,c,m,l,y;this.mousePos=new r(e.getComponent("pos").x,e.getComponent("pos").y),this.mouseTargetList=e.getComponent("targetList").positions,this.goalPos=this.getCurrentGoalPosition();const n=this.calcStep();this.map.value.map[this.mousePos.x][this.mousePos.y].occupied=null,this.map.value.map[n.x][n.y].occupied=e,(n.x===((u=this.goalPos)==null?void 0:u.x)&&n.y===((h=this.goalPos)==null?void 0:h.y)||((c=this.mousePos)==null?void 0:c.x)===((m=this.goalPos)==null?void 0:m.x)&&((l=this.mousePos)==null?void 0:l.y)===((y=this.goalPos)==null?void 0:y.y))&&(this.mouseTargetList.length===0&&(e.getComponent("isAlive").isAlive=!1,this.mouseWinCounter++,t()),this.mouseTargetList.pop()),e.getComponent("pos").x=n.x,e.getComponent("pos").y=n.y,t()})}getInitialMouseX(){return Math.floor(Math.random()*100)}getInitialMouseY(){return Math.floor(Math.random()*100)}calcStep(){if(this.mousePos!==void 0&&this.mousePos.x!==void 0&&this.mousePos.y!==void 0&&this.goalPos!==void 0&&this.goalPos.x!==void 0&&this.goalPos.y!==void 0){const e=this.mousePos.x-this.goalPos.x,t=this.mousePos.y-this.goalPos.y;return e>0?t>0?new r(this.mousePos.x-1,this.mousePos.y-1):new r(this.mousePos.x-1,this.mousePos.y+1):e<0?t>0?new r(this.mousePos.x+1,this.mousePos.y-1):new r(this.mousePos.x+1,this.mousePos.y+1):t>0?new r(this.mousePos.x,this.mousePos.y-1):new r(this.mousePos.x,this.mousePos.y+1)}return this.goalPos}getCurrentGoalPosition(){return this.mouseTargetList!==void 0&&this.mouseTargetList.length!==void 0&&this.mouseTargetList.length>0?this.mouseTargetList[this.mouseTargetList.length-1]:this.goalPos}getNumberOfMice(){return this.numberOfMice}getMouseWinCounter(){return this.mouseWinCounter}}class r{constructor(e,t){o(this,"x");o(this,"y");this.x=e,this.y=t}}class v{constructor(e){o(this,"_entityCount",0);o(this,"_entities",{});o(this,"numberOfMice");this.numberOfMice=e}getMouse(e){return this._entities[`${e}`]}isAlive(e){return this._entities[`${e}`].getComponent("isAlive").isAlive}createEntity(e){if(e||(e=this._entityCount.toString()),this._entities[e])throw new Error(`Entity with ID ${e} already exists`);const t=new b(e);return this._entities[t.id]=t,this._entityCount++,t}importEntities(e){this._entities={...this._entities,...e}}update(e){this.importEntities(e)}}class b{constructor(e){o(this,"id");o(this,"components",{});this.id=e}addComponent(e,t){this.components[e.compName]=e.init(t)}getComponent(e){return this.components[e]}}class d{constructor(){o(this,"compName","ap");o(this,"shape")}init(e){return{shape:e.shape??"mouse"}}}class p{constructor(e){o(this,"compName");o(this,"x");o(this,"y");this.compName=e}init(e){return{x:e.x??0,y:e.y??0}}}class M{constructor(e){o(this,"compName");o(this,"positions");this.compName=e,this.positions=[]}init(e){return this.positions=e,{positions:this.positions}}}class C{constructor(){o(this,"compName","isAlive");o(this,"isAlive")}init(e){return{isAlive:e??!1}}}class S{constructor(){o(this,"compName","map");o(this,"map")}init(e){this.map=Array(100);for(let t=0;t<100;t++){this.map[t]=new Array(100);for(let s=0;s<100;s++)t%20===0&&t!==0?this.map[t][s]={occupied:null,type:"underground"}:this.map[t][s]={occupied:null,type:"surface"}}return this.map[80][0]={occupied:null,type:"meeting"},this.map[20][10]={occupied:null,type:"entry"},this.map[20][80]={occupied:null,type:"entry"},this.map[40][90]={occupied:null,type:"entry"},this.map[40][20]={occupied:null,type:"entry"},this.map[60][10]={occupied:null,type:"entry"},this.map[60][30]={occupied:null,type:"entry"},this.map[80][90]={occupied:null,type:"entry"},this.map}}class x{constructor(e,t,s,n){o(this,"logTag","[GameService]");o(this,"_settings");o(this,"gameFinished",!1);o(this,"peerService");o(this,"entitySystem");o(this,"map",f(new S));o(this,"numberOfMice");o(this,"currentState",f({}));o(this,"stateBuffer",{});o(this,"mouseHelper");o(this,"counter",0);this._settings=s??{gameId:"game1",multiplayer:!1,networked:!1},this.mouseHelper=new P(this.map),this.numberOfMice=this.mouseHelper.getNumberOfMice(),this.peerService=e,this.entitySystem=t??new v(this.numberOfMice),this.map.value.init()}updateOpponentPosition(){for(let e=1;e<=this.numberOfMice;e++){const t=this.entitySystem.getMouse(e.toString());this.entitySystem.isAlive(t.id)&&this.mouseHelper.updateMousePosition(t)}}startGame(e){this.currentState.value={players:{...this.generatePlayers(e)},opponents:{...this.generateOpponents()}},this.stateBuffer={...this.currentState.value},this._settings.multiplayer&&this._settings.networked&&this.peerService.send({type:"start_game",value:{state:this.currentState.value}}),window.requestAnimationFrame(this._gameLoop.bind(this))}generatePlayers(e=[]){const t={};for(const s of e){const n=this.entitySystem.createEntity(s);n.addComponent(new d,{shape:"cat"}),n.addComponent(new p("pos"),{x:50,y:50}),t[n.id]=n}return t}generateOpponents(){const e={};for(let t=0;t<this.numberOfMice;++t){const s=this.entitySystem.createEntity();s.addComponent(new d,{shape:"mouse"}),s.addComponent(new p("pos"),{x:this.mouseHelper.getInitialMouseX(),y:this.mouseHelper.getInitialMouseY()}),s.addComponent(new p("goal"),{x:80,y:0}),s.addComponent(new M("targetList"),this.generateMouseGoalList(2)),s.addComponent(new C,{isAlive:!0}),e[s.id]=s}return e}generateMouseGoalList(e){const t=[];switch(t.push(new r(80,0)),e){case 0:break;case 1:t.push(new r(-1e3,-2e3));break;case 2:for(let s=0;s<Math.floor(Math.random()*10);s++)t.push(new r(Math.floor(Math.random()*100),Math.floor(Math.random()*100)));break;default:throw new Error("Pathstrategy not implemented!")}return t}emit(e,t,s){const n=a(this.stateBuffer.players[e]);if(!n){console.warn(`${this.logTag} Entity with ID ${e} not found`);return}switch(t){case"move":this._handleMove(n,s);break}this.stateBuffer.players[e]=n}checkBorder(e,t){return!(this.map.value.map[e]==null||this.map.value.map[e][t]==null)}_handleMove(e,t){const s=e.getComponent("pos");switch(t){case"up":if(!this.checkBorder(s.x-1,s.y))break;this.map.value.map[s.x][s.y].occupied=null,s.x=s.x-1,this.map.value.map[s.x][s.y].occupied=e;break;case"right":if(!this.checkBorder(s.x,s.y+1))break;this.map.value.map[s.x][s.y].occupied=null,s.y=s.y+1,this.map.value.map[s.x][s.y].occupied=e;break;case"left":if(!this.checkBorder(s.x-1,s.y-1))break;this.map.value.map[s.x][s.y].occupied=null,s.y=s.y-1,this.map.value.map[s.x][s.y].occupied=e;break;case"down":if(!this.checkBorder(s.x+1,s.y))break;this.map.value.map[s.x][s.y].occupied=null,s.x=s.x+1,this.map.value.map[s.x][s.y].occupied=e;break;default:console.warn(`${this.logTag} Unknown direction ${t}`)}this.map.value.map[s.x][s.y].occupied!=null}_gameLoop(){this.counter++,this.counter%7===0&&(this.counter=0,this.updateOpponentPosition()),this._settings.multiplayer&&this._settings.networked&&this.peerService.send({type:"update",value:this.stateBuffer}),this.entitySystem.update(this.stateBuffer.players),this.entitySystem.update(this.stateBuffer.opponents),this.stateBuffer={...this.currentState.value},this.gameFinished!==!0&&window.requestAnimationFrame(this._gameLoop.bind(this))}}export{x as G};
